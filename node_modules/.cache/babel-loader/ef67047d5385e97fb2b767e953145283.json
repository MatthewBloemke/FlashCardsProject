{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yards\\\\OneDrive\\\\Desktop\\\\Flashcard Project\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Study.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { readDeck } from '../utils/api/index';\nimport StudyCards from './StudyCards';\n\nconst Study = () => {\n  let {\n    deckId\n  } = useParams();\n  let [deck, setDeck] = useState([]);\n  useEffect(() => {\n    let abort = new AbortController();\n\n    async function loadDeck() {\n      let temp;\n      await readDeck(deckId, abort.signal).then(value => {\n        temp = value;\n      });\n      setDeck(temp);\n    }\n\n    loadDeck();\n  }, [deckId]);\n  let deckCards = [];\n\n  if (deck.cards) {\n    deckCards = deck.cards;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    \"aria-label\": \"breadcrumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"ol\", {\n    className: \"breadcrumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"breadcrumb-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 53\n    }\n  }, \"Home\")), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"breadcrumb-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/decks/${deck.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 53\n    }\n  }, deck.name)), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"breadcrumb-item active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, \"Study\"))), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"Study: \", deck.name), deckCards.length < 3 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"Not Enough Cards.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"You need at least 3 cards to study. There are \", deckCards.length, \" cards in this deck.\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    style: {\n      color: 'white',\n      textDecoration: 'none'\n    },\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 53\n    }\n  }, \"Add Cards\"))) : /*#__PURE__*/React.createElement(StudyCards, {\n    deckCards: deckCards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }\n  }));\n};\n\nexport default Study;","map":{"version":3,"sources":["C:/Users/yards/OneDrive/Desktop/Flashcard Project/Project_Flashcards_Qualified_1/src/Layout/Study.js"],"names":["React","useEffect","useState","useParams","Link","readDeck","StudyCards","Study","deckId","deck","setDeck","abort","AbortController","loadDeck","temp","signal","then","value","deckCards","cards","id","name","length","color","textDecoration"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAQC,SAAR,EAAmBC,IAAnB,QAA8B,kBAA9B;AACA,SAAQC,QAAR,QAAuB,oBAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAChB,MAAI;AAACC,IAAAA;AAAD,MAAWL,SAAS,EAAxB;AACA,MAAI,CAACM,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAA9B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIU,KAAK,GAAG,IAAIC,eAAJ,EAAZ;;AACA,mBAAeC,QAAf,GAAyB;AACrB,UAAIC,IAAJ;AACA,YAAMT,QAAQ,CAACG,MAAD,EAASG,KAAK,CAACI,MAAf,CAAR,CAA+BC,IAA/B,CAAqCC,KAAD,IAAW;AACjDH,QAAAA,IAAI,GAAGG,KAAP;AACH,OAFK,CAAN;AAGAP,MAAAA,OAAO,CAACI,IAAD,CAAP;AACH;;AACDD,IAAAA,QAAQ;AACX,GAVQ,EAUP,CAACL,MAAD,CAVO,CAAT;AAWA,MAAIU,SAAS,GAAG,EAAhB;;AACA,MAAIT,IAAI,CAACU,KAAT,EAAe;AACXD,IAAAA,SAAS,GAAGT,IAAI,CAACU,KAAjB;AACH;;AACD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,kBAAW,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgC,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAhC,CADJ,eAEI;AAAI,IAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgC,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,UAASV,IAAI,CAACW,EAAG,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCX,IAAI,CAACY,IAArC,CAAhC,CAFJ,eAGI;AAAI,IAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ,CADJ,CADJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYZ,IAAI,CAACY,IAAjB,CARJ,EASMH,SAAS,CAACI,MAAV,GAAmB,CAApB,gBACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAAkDJ,SAAS,CAACI,MAA5D,yBAFJ,eAGI;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAoC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE,OAAR;AAAiBC,MAAAA,cAAc,EAAE;AAAjC,KAAb;AAAuD,IAAA,EAAE,EAAC,GAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAApC,CAHJ,CADC,gBAMF,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEN,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfH,CADJ;AAmBH,CArCD;;AAsCA,eAAeX,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport {useParams, Link} from 'react-router-dom'\r\nimport {readDeck} from '../utils/api/index'\r\nimport StudyCards from './StudyCards'\r\n\r\nconst Study = () => {\r\n    let {deckId} = useParams()\r\n    let [deck, setDeck] = useState([]);\r\n    useEffect(() => {\r\n        let abort = new AbortController()\r\n        async function loadDeck(){\r\n            let temp;\r\n            await readDeck(deckId, abort.signal).then((value) => {\r\n                temp = value;\r\n            })\r\n            setDeck(temp)\r\n        }\r\n        loadDeck()\r\n    },[deckId])\r\n    let deckCards = [];\r\n    if (deck.cards){\r\n        deckCards = deck.cards;\r\n    }\r\n    return (\r\n        <div>\r\n            <nav aria-label=\"breadcrumb\"> \r\n                <ol className=\"breadcrumb\">\r\n                    <li className=\"breadcrumb-item\"><Link to=\"/\">Home</Link></li>\r\n                    <li className=\"breadcrumb-item\"><Link to={`/decks/${deck.id}`}>{deck.name}</Link></li>\r\n                    <li className=\"breadcrumb-item active\">Study</li>\r\n                </ol>\r\n            </nav>\r\n            <h1>Study: {deck.name}</h1>\r\n            {(deckCards.length < 3) ? (\r\n            <div>\r\n                <h2>Not Enough Cards.</h2>\r\n                <p>You need at least 3 cards to study. There are {deckCards.length} cards in this deck.</p>\r\n                <button className=\"btn btn-primary\"><Link style={{color: 'white', textDecoration: 'none'}} to=\"/\">Add Cards</Link></button>\r\n            </div>\r\n        ): <StudyCards deckCards={deckCards} />}\r\n        </div>\r\n    )\r\n}\r\nexport default Study"]},"metadata":{},"sourceType":"module"}