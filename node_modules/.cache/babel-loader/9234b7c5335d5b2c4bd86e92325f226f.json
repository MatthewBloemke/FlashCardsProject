{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yards\\\\OneDrive\\\\Desktop\\\\Flashcard Project\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\EditCard.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useParams, Link, useHistory } from 'react-router-dom';\nimport { readCard, readDeck, updateCard } from '../utils/api/index';\nimport CardForm from './CardForm';\n\nconst EditCard = () => {\n  const history = useHistory();\n  const {\n    deckId,\n    cardId\n  } = useParams();\n  const [deckName, setDeckName] = useState('');\n  const [front, setFront] = useState(\"\");\n  const [back, setBack] = useState(\"\");\n  useEffect(() => {\n    const abort = new AbortController();\n\n    async function getDeckName() {\n      await readDeck(deckId, abort.signal).then(deck => {\n        setDeckName(deck.name);\n      });\n    }\n\n    ;\n\n    async function getCardInfo() {\n      await readCard(cardId, abort.signal).then(card => {\n        setFront(card.front);\n        setBack(card.back);\n      });\n    }\n\n    ;\n    getCardInfo();\n    getDeckName();\n  }, [deckId, cardId]);\n\n  const handleFrontChange = event => setFront(event.target.value);\n\n  const handleBackChange = event => setBack(event.target.value);\n\n  async function submitHandler(event) {\n    const abort = new AbortController();\n    event.preventDefault();\n    const id = cardId;\n    const cardContents = {\n      front,\n      back,\n      id\n    };\n    await updateCard(cardContents, abort.signal);\n    history.push(`/decks/${deckId}`);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    \"aria-label\": \"breadcrumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"ol\", {\n    className: \"breadcrumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"breadcrumb-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 53\n    }\n  }, \"Home\")), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"breadcrumb-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/decks/${deckId}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 53\n    }\n  }, deckName)), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"breadcrumb-item active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"Edit Card \", cardId))), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Edit Card\"), /*#__PURE__*/React.createElement(CardForm, {\n    firstButton: \"Cancel\",\n    front: front,\n    back: back,\n    submitHandler: submitHandler,\n    handleFrontChange: handleFrontChange,\n    handleBackChange: handleBackChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default EditCard;","map":{"version":3,"sources":["C:/Users/yards/OneDrive/Desktop/Flashcard Project/Project_Flashcards_Qualified_1/src/Layout/EditCard.js"],"names":["React","useEffect","useState","useParams","Link","useHistory","readCard","readDeck","updateCard","CardForm","EditCard","history","deckId","cardId","deckName","setDeckName","front","setFront","back","setBack","abort","AbortController","getDeckName","signal","then","deck","name","getCardInfo","card","handleFrontChange","event","target","value","handleBackChange","submitHandler","preventDefault","id","cardContents","push"],"mappings":"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","sourcesContent":["import React, {useEffect,useState} from 'react'\r\nimport {useParams, Link,useHistory} from 'react-router-dom'\r\nimport {readCard, readDeck, updateCard} from '../utils/api/index'\r\nimport CardForm from './CardForm'\r\n\r\nconst EditCard = () => {\r\n    const history = useHistory();\r\n    const {deckId,cardId} = useParams();\r\n    const [deckName,setDeckName] = useState('')  ;  \r\n    const [front, setFront] = useState(\"\");\r\n    const [back, setBack] = useState(\"\");\r\n    useEffect(() => {\r\n        const abort = new AbortController();\r\n        async function getDeckName() {\r\n            await readDeck(deckId, abort.signal).then((deck) => {\r\n                setDeckName(deck.name);\r\n            });\r\n        };\r\n        async function getCardInfo() {\r\n            await readCard(cardId, abort.signal).then((card) => {\r\n                setFront(card.front);\r\n                setBack(card.back);\r\n            });\r\n        };\r\n        getCardInfo();\r\n        getDeckName();\r\n    }, [deckId, cardId]);\r\n\r\n    const handleFrontChange = (event) => setFront(event.target.value);\r\n    const handleBackChange = (event) => setBack(event.target.value);\r\n    async function submitHandler(event) {\r\n        const abort = new AbortController();\r\n        event.preventDefault();\r\n        const id= cardId;\r\n        const cardContents ={front, back, id};\r\n        await updateCard(cardContents, abort.signal);\r\n        history.push(`/decks/${deckId}`);\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <nav aria-label=\"breadcrumb\">\r\n                <ol className=\"breadcrumb\">\r\n                    <li className=\"breadcrumb-item\"><Link to=\"/\">Home</Link></li>\r\n                    <li className=\"breadcrumb-item\"><Link to={`/decks/${deckId}`}>{deckName}</Link></li>\r\n                    <li className=\"breadcrumb-item active\">Edit Card {cardId}</li>\r\n                </ol>\r\n            </nav>\r\n            <h1>Edit Card</h1>\r\n            <CardForm firstButton='Cancel' front={front} back={back} submitHandler={submitHandler} handleFrontChange={handleFrontChange} handleBackChange={handleBackChange}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditCard;"]},"metadata":{},"sourceType":"module"}